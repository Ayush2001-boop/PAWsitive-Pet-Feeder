{"version":3,"sources":["action.js"],"names":["serverUrl","login","email","password","dispatch","type","axios","post","headers","data","console","log","payload","response","message","loadUser","get","updateIp","ip","ip_address","header","updatePet","formData","petId","name","hour","minute","cup","put","sendPets","pets","removePet","addTask","title","description","updateTask","taskId","deleteTask","updateProfile","logout","register","updatePassword","oldPassword","newPassword","verify","otp","forgetPassword","resetPassword"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst serverUrl = \"https://meow-meow-feeder.herokuapp.com/api/v1\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"loginRequest\" });\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`${serverUrl}/login`,\r\n\t\t\t{ email, password },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tconsole.log(data);\r\n\t\tdispatch({ type: \"loginSuccess\", payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: \"loginFailure\", payload: error.response.data.message });\r\n\t}\r\n};\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"loadUserRequest\" });\r\n\r\n\t\tconst { data } = await axios.get(`${serverUrl}/me`);\r\n\t\tdispatch({ type: \"loadUserSuccess\", payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: \"loadUserFailure\", payload: error.response.data.message });\r\n\t}\r\n};\r\n\r\nexport const updateIp = (ip) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"updateIpRequest\" });\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`${serverUrl}/updateIp`,\r\n\t\t\t{\r\n\t\t\t\tip_address: ip,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theader: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tdispatch({ type: \"updateIpSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"updateIpRequest\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updatePet = (formData) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"updatePetRequest\" });\r\n\t\tconst { petId, name, hour, minute, cup } = formData;\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`${serverUrl}/Pet/${petId}`,\r\n\t\t\t{ petId, name, hour, minute, cup },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tdispatch({ type: \"updatePetSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"updatePetFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const sendPets = (ip, pets) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"sendPetsRequest\" });\r\n\t\tconsole.log(pets);\r\n\t\tconsole.log(`Making api call to ${ip} with ${pets}`);\r\n\t\tconsole.log(\"Send Pet request\");\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`http://${ip}:3000/runPython`,\r\n\t\t\t{ pets },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tconsole.log(data);\r\n\t\tdispatch({ type: \"sendPetsSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: \"sendPetsFailure\", payload: error.response.data.message });\r\n\t}\r\n};\r\n\r\nexport const removePet = (petId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"removePetRequest\" });\r\n\r\n\t\tconst { data } = await axios.delete(`${serverUrl}/Pet/${petId}`);\r\n\t\tdispatch({ type: \"removePetSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"removePetFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const addTask = (title, description) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"addTaskRequest\" });\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`${serverUrl}/newtask`,\r\n\t\t\t{\r\n\t\t\t\ttitle,\r\n\t\t\t\tdescription,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tdispatch({ type: \"addTaskSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: \"addTaskFailure\", payload: error.response.data.message });\r\n\t}\r\n};\r\n\r\nexport const updateTask = (taskId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"updateTaskRequest\" });\r\n\r\n\t\tconst { data } = await axios.get(`${serverUrl}/task/${taskId}`);\r\n\t\tdispatch({ type: \"updateTaskSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"updateTaskFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteTask = (taskId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"deleteTaskRequest\" });\r\n\r\n\t\tconst { data } = await axios.delete(`${serverUrl}/task/${taskId}`);\r\n\t\tdispatch({ type: \"deleteTaskSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"deleteTaskFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateProfile = (formData) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"updateProfileRequest\" });\r\n\r\n\t\tconst { data } = await axios.put(`${serverUrl}/updateprofile`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t},\r\n\t\t});\r\n\t\tdispatch({ type: \"updateProfileSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"updateProfileFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"logoutRequest\" });\r\n\r\n\t\tawait axios.get(`${serverUrl}/logout`);\r\n\t\tdispatch({ type: \"logoutSuccess\" });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"logoutFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const register = (formData) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"registerRequest\" });\r\n\r\n\t\tconst { data } = await axios.post(`${serverUrl}/register`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t},\r\n\t\t});\r\n\t\tdispatch({ type: \"registerSuccess\", payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"registerFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updatePassword =\r\n\t(oldPassword, newPassword) => async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: \"updatePasswordRequest\" });\r\n\r\n\t\t\tconst { data } = await axios.put(\r\n\t\t\t\t`${serverUrl}/updatepassword`,\r\n\t\t\t\t{ oldPassword, newPassword },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tdispatch({ type: \"updatePasswordSuccess\", payload: data.message });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updatePasswordFailure\",\r\n\t\t\t\tpayload: error.response.data.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\nexport const verify = (otp) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"verificationRequest\" });\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`${serverUrl}/verify`,\r\n\t\t\t{ otp },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tdispatch({ type: \"verificationSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"verificationFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const forgetPassword = (email) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"forgetPasswordRequest\" });\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`${serverUrl}/forgetpassword`,\r\n\t\t\t{ email },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tdispatch({ type: \"forgetPasswordSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"forgetPasswordFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const resetPassword = (otp, newPassword) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: \"resetPasswordRequest\" });\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`${serverUrl}/resetpassword`,\r\n\t\t\t{ otp, newPassword },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tdispatch({ type: \"resetPasswordSuccess\", payload: data.message });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"resetPasswordFailure\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n"],"file":"action.dev.js"}